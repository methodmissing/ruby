#define PROBE_EVALSTR_ENTRY(obj) PROBE_ENTRY(EVALSTR,(char*)rb_obj_classname(obj))
#define PROBE_EVALSTR_RETURN(obj) PROBE_RETURN(EVALSTR,(char*)rb_obj_classname(obj))
#define PROBE_INSTANCE_EVAL_ENTRY(obj) PROBE_ENTRY(INSTANCE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_INSTANCE_EVAL_RETURN(obj) PROBE_RETURN(INSTANCE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_INSTANCE_EXEC_ENTRY(obj) PROBE_ENTRY(INSTANCE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_INSTANCE_EXEC_RETURN(obj) PROBE_RETURN(INSTANCE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_MODULE_EVAL_ENTRY(obj) PROBE_ENTRY(MODULE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_MODULE_EVAL_RETURN(obj) PROBE_RETURN(MODULE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_MODULE_EXEC_ENTRY(obj) PROBE_ENTRY(MODULE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_MODULE_EXEC_RETURN(obj) PROBE_RETURN(MODULE_EXEC,(char*)rb_obj_classname(obj))

#define PROBE_SEND_ENTRY() PROBE_ENTRY(SEND)
#define PROBE_SEND_RETURN() PROBE_RETURN(SEND)
#define PROBE_BLOCK_GIVEN_ENTRY() PROBE_ENTRY(BLOCK_GIVEN)
#define PROBE_BLOCK_GIVEN_RETURN() PROBE_RETURN(BLOCK_GIVEN)
#define PROBE_CATCH_ENTRY() PROBE_ENTRY(CATCH)
#define PROBE_CATCH_RETURN() PROBE_RETURN(CATCH)
#define PROBE_THROW_ENTRY() PROBE_ENTRY(THROW)
#define PROBE_THROW_RETURN() PROBE_RETURN(THROW)
#define PROBE_CALLER_ENTRY() PROBE_ENTRY(CALLER)
#define PROBE_CALLER_RETURN() PROBE_RETURN(CALLER)
#define PROBE_METHOD_CALL_ENTRY(obj,id) PROBE_OBJECT_AND_ID_ENTRY(METHOD_CALL,obj,id)
#define PROBE_METHOD_CALL_RETURN(obj,id) PROBE_OBJECT_AND_ID_RETURN(METHOD_CALL,obj,id)
#define PROBE_SUPER_ENTRY() PROBE_ENTRY(SUPER)
#define PROBE_SUPER_RETURN() PROBE_RETURN(SUPER)
#define PROBE_METHOD_MISSING_ENTRY() PROBE_ENTRY(METHOD_MISSING)
#define PROBE_METHOD_MISSING_RETURN() PROBE_RETURN(METHOD_MISSING)
#define PROBE_YIELD_ENTRY() PROBE_ENTRY(YIELD)
#define PROBE_YIELD_RETURN() PROBE_RETURN(YIELD)
#define PROBE_LOOP_ENTRY() PROBE_ENTRY(LOOP)
#define PROBE_LOOP_RETURN() PROBE_RETURN(LOOP)
#define PROBE_BLOCK_CALL_ENTRY(obj,id) PROBE_OBJECT_AND_ID_ENTRY(BLOCK_CALL,obj,id)
#define PROBE_BLOCK_CALL_RETURN(obj,id) PROBE_OBJECT_AND_ID_RETURN(BLOCK_CALL,obj,id)