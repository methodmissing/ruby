#define PROBE_VM_CHANGE_STATE_ENTRY(version) PROBE_INT_ENTRY(VM_CHANGE_STATE,version)
#define PROBE_VM_CHANGE_STATE_RETURN(version) PROBE_INT_RETURN(VM_CHANGE_STATE,version)
#define PROBE_VM_YIELD_ENTRY() PROBE_ENTRY(VM_YIELD)
#define PROBE_VM_YIELD_RETURN() PROBE_RETURN(VM_YIELD)
#define PROBE_VM_YIELD_CREF_ENTRY() PROBE_ENTRY(VM_YIELD_CREF)
#define PROBE_VM_YIELD_CREF_RETURN() PROBE_RETURN(VM_YIELD_CREF)
#define PROBE_VM_INVOKE_PROC_ENTRY(obj) PROBE_ENTRY(VM_INVOKE_PROC)
#define PROBE_VM_INVOKE_PROC_RETURN(obj) PROBE_RETURN(VM_INVOKE_PROC)
#define PROBE_VM_ISEQ_EVAL_ENTRY() PROBE_ENTRY(VM_ISEQ_EVAL)
#define PROBE_VM_ISEQ_EVAL_RETURN() PROBE_RETURN(VM_ISEQ_EVAL)
#define PROBE_VM_EXEC_ENTRY(th) PROBE_ENTRY(VM_EXEC)
#define PROBE_VM_EXEC_RETURN(th) PROBE_RETURN(VM_EXEC)
#define PROBE_VM_CHECK_OPT_METHOD_REDEF_ENTRY() PROBE_ENTRY(VM_CHECK_OPT_METHOD_REDEF)
#define PROBE_VM_CHECK_OPT_METHOD_REDEF_RETURN() PROBE_RETURN(VM_CHECK_OPT_METHOD_REDEF)
#define PROBE_VM_ADD_OPT_METHOD_ENTRY(klass,meth) PROBE_ENTRY(VM_ADD_OPT_METHOD)
#define PROBE_VM_ADD_OPT_METHOD_RETURN(klass,meth) PROBE_RETURN(VM_ADD_OPT_METHOD)
#define PROBE_VM_BACKTRACE_ENTRY(lev) PROBE_ENTRY(VM_BACKTRACE,(int)lev)
#define PROBE_VM_BACKTRACE_RETURN(lev) PROBE_RETURN(VM_BACKTRACE,(int)lev)
#define PROBE_VM_SEND_ENTRY() PROBE_ENTRY(VM_SEND)
#define PROBE_VM_SEND_RETURN() PROBE_RETURN(VM_SEND)
#define PROBE_VM_CALL_ENTRY(th) PROBE_ENTRY(VM_CALL)
#define PROBE_VM_CALL_RETURN(th) PROBE_RETURN(VM_CALL)
#define PROBE_VM_SUPER_ENTRY(th) PROBE_ENTRY(VM_SUPER)
#define PROBE_VM_SUPER_RETURN(th) PROBE_RETURN(VM_SUPER)
#define PROBE_VM_METHOD_MISSING_ENTRY() PROBE_ENTRY(VM_METHOD_MISSING)
#define PROBE_VM_METHOD_MISSING_RETURN() PROBE_RETURN(VM_METHOD_MISSING)
#define PROBE_VM_LOOP_ENTRY() PROBE_ENTRY(VM_LOOP)
#define PROBE_VM_LOOP_RETURN() PROBE_RETURN(VM_LOOP)
#define PROBE_VM_BLOCK_CALL_ENTRY(obj,id) PROBE_OBJECT_AND_ID_ENTRY(VM_BLOCK_CALL,obj,id)
#define PROBE_VM_BLOCK_CALL_RETURN(obj,id) PROBE_OBJECT_AND_ID_RETURN(VM_BLOCK_CALL,obj,id)
#define PROBE_VM_BLOCK_GIVEN_ENTRY() PROBE_ENTRY(VM_BLOCK_GIVEN)
#define PROBE_VM_BLOCK_GIVEN_RETURN() PROBE_RETURN(VM_BLOCK_GIVEN)
#define PROBE_VM_CATCH_ENTRY() PROBE_ENTRY(VM_CATCH)
#define PROBE_VM_CATCH_RETURN() PROBE_RETURN(VM_CATCH)
#define PROBE_VM_THROW_ENTRY() PROBE_ENTRY(VM_THROW)
#define PROBE_VM_THROW_RETURN() PROBE_RETURN(VM_THROW)
#define PROBE_VM_EVALSTR_ENTRY(obj) PROBE_ENTRY(VM_EVALSTR,(char*)rb_obj_classname(obj))
#define PROBE_VM_EVALSTR_RETURN(obj) PROBE_RETURN(VM_EVALSTR,(char*)rb_obj_classname(obj))
#define PROBE_VM_INSTANCE_EVAL_ENTRY(obj) PROBE_ENTRY(VM_INSTANCE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_VM_INSTANCE_EVAL_RETURN(obj) PROBE_RETURN(VM_INSTANCE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_VM_INSTANCE_EXEC_ENTRY(obj) PROBE_ENTRY(VM_INSTANCE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_VM_INSTANCE_EXEC_RETURN(obj) PROBE_RETURN(VM_INSTANCE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_VM_MODULE_EVAL_ENTRY(obj) PROBE_ENTRY(VM_MODULE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_VM_MODULE_EVAL_RETURN(obj) PROBE_RETURN(VM_MODULE_EVAL,(char*)rb_obj_classname(obj))
#define PROBE_VM_MODULE_EXEC_ENTRY(obj) PROBE_ENTRY(VM_MODULE_EXEC,(char*)rb_obj_classname(obj))
#define PROBE_VM_MODULE_EXEC_RETURN(obj) PROBE_RETURN(VM_MODULE_EXEC,(char*)rb_obj_classname(obj))