#define PROBE_PROC_MARK_BEGIN(ptr) PROBE_PTR_BEGIN(PROC_MARK,ptr)
#define PROBE_PROC_MARK_END(ptr) PROBE_PTR_END(PROC_MARK,ptr)
#define PROBE_PROC_FREE_BEGIN(ptr) PROBE_PTR_BEGIN(PROC_FREE,ptr)
#define PROBE_PROC_FREE_END(ptr) PROBE_PTR_END(PROC_FREE,ptr)
#define PROBE_PROC_DUP_BEGIN(obj) PROBE_OBJECT_BEGIN(PROC_DUP,obj)
#define PROBE_PROC_DUP_END(obj) PROBE_OBJECT_END(PROC_DUP,obj)
#define PROBE_BINDING_MARK_BEGIN(ptr) PROBE_PTR_BEGIN(BINDING_MARK,ptr)
#define PROBE_BINDING_MARK_END(ptr) PROBE_PTR_END(BINDING_MARK,ptr)
#define PROBE_BINDING_FREE_BEGIN(ptr) PROBE_PTR_BEGIN(BINDING_FREE,ptr)
#define PROBE_BINDING_FREE_END(ptr) PROBE_PTR_END(BINDING_FREE,ptr)
#define PROBE_BINDING_DUP_BEGIN(obj) PROBE_OBJECT_BEGIN(BINDING_DUP,obj)
#define PROBE_BINDING_DUP_END(obj) PROBE_OBJECT_END(BINDING_DUP,obj)
#define PROBE_BINDING_NEW_BEGIN() PROBE_BEGIN(BINDING_NEW)
#define PROBE_BINDING_NEW_END() PROBE_END(BINDING_NEW)
#define PROBE_PROC_NEW_BEGIN(class,is_lambda) PROBE_CLASS_INT_BEGIN(PROC_NEW,class,is_lambda)
#define PROBE_PROC_NEW_END(class,is_lambda) PROBE_CLASS_INT_END(PROC_NEW,class,is_lambda)
#define PROBE_PROC_CALL_BEGIN(obj) PROBE_OBJECT_BEGIN(PROC_CALL,obj)
#define PROBE_PROC_CALL_END(obj,res) PROBE_OBJECT1_END(PROC_CALL,obj,res)