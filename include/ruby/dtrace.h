/*
 * Generated by dtrace(1M).
 */

#ifndef	_DTRACE_H
#define	_DTRACE_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define RUBY_STABILITY "___dtrace_stability$ruby$v1$5_5_5_1_1_5_1_1_5_5_5_5_1_1_0"

#define RUBY_TYPEDEFS "___dtrace_typedefs$ruby$v2"

#define	RUBY_BINDING_DUP_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__dup__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_DUP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$binding__dup__entry$v1()
#define	RUBY_BINDING_DUP_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__dup__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_DUP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$binding__dup__return$v1()
#define	RUBY_BINDING_FREE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__free__entry$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$binding__free__entry$v1()
#define	RUBY_BINDING_FREE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__free__return$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$binding__free__return$v1()
#define	RUBY_BINDING_MARK_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__mark__entry$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_MARK_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$binding__mark__entry$v1()
#define	RUBY_BINDING_MARK_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__mark__return$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_MARK_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$binding__mark__return$v1()
#define	RUBY_BINDING_NEW_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__new__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_NEW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$binding__new__entry$v1()
#define	RUBY_BINDING_NEW_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$binding__new__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BINDING_NEW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$binding__new__return$v1()
#define	RUBY_BLOCK_CALL_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$block__call__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BLOCK_CALL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$block__call__entry$v1()
#define	RUBY_BLOCK_CALL_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$block__call__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BLOCK_CALL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$block__call__return$v1()
#define	RUBY_BLOCK_GIVEN_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$block__given__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BLOCK_GIVEN_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$block__given__entry$v1()
#define	RUBY_BLOCK_GIVEN_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$block__given__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_BLOCK_GIVEN_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$block__given__return$v1()
#define	RUBY_CALLER_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$caller__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CALLER_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$caller__entry$v1()
#define	RUBY_CALLER_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$caller__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CALLER_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$caller__return$v1()
#define	RUBY_CATCH_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$catch__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CATCH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$catch__entry$v1()
#define	RUBY_CATCH_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$catch__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CATCH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$catch__return$v1()
#define	RUBY_CLASS_INITIALIZE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$class__initialize__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CLASS_INITIALIZE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$class__initialize__entry$v1()
#define	RUBY_CLASS_INITIALIZE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$class__initialize__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CLASS_INITIALIZE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$class__initialize__return$v1()
#define	RUBY_CLASS_SUPERCLASS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$class__superclass__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CLASS_SUPERCLASS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$class__superclass__entry$v1()
#define	RUBY_CLASS_SUPERCLASS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$class__superclass__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CLASS_SUPERCLASS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$class__superclass__return$v1()
#define	RUBY_COERCE_ARRAY_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__array__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_ARRAY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$coerce__array__entry$v1()
#define	RUBY_COERCE_ARRAY_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__array__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_ARRAY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$coerce__array__return$v1()
#define	RUBY_COERCE_FLOAT_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__float__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_FLOAT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$coerce__float__entry$v1()
#define	RUBY_COERCE_FLOAT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__float__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_FLOAT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$coerce__float__return$v1()
#define	RUBY_COERCE_INTEGER_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__integer__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_INTEGER_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$coerce__integer__entry$v1()
#define	RUBY_COERCE_INTEGER_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__integer__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_INTEGER_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$coerce__integer__return$v1()
#define	RUBY_COERCE_STRING_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__string__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_STRING_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$coerce__string__entry$v1()
#define	RUBY_COERCE_STRING_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$coerce__string__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_COERCE_STRING_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$coerce__string__return$v1()
#define	RUBY_CONVERT_TYPE_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$convert__type__entry$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CONVERT_TYPE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$convert__type__entry$v1()
#define	RUBY_CONVERT_TYPE_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$convert__type__return$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_CONVERT_TYPE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$convert__type__return$v1()
#define	RUBY_EVALSTR_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$evalstr__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_EVALSTR_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$evalstr__entry$v1()
#define	RUBY_EVALSTR_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$evalstr__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_EVALSTR_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$evalstr__return$v1()
#define	RUBY_FIBER_FREE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__free__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$fiber__free__entry$v1()
#define	RUBY_FIBER_FREE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__free__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$fiber__free__return$v1()
#define	RUBY_FIBER_MARK_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__mark__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_MARK_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$fiber__mark__entry$v1()
#define	RUBY_FIBER_MARK_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__mark__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_MARK_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$fiber__mark__return$v1()
#define	RUBY_FIBER_START_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__start__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_START_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$fiber__start__entry$v1()
#define	RUBY_FIBER_START_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__start__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_START_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$fiber__start__return$v1()
#define	RUBY_FIBER_SWITCH_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__switch__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_SWITCH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$fiber__switch__entry$v1()
#define	RUBY_FIBER_SWITCH_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__switch__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_SWITCH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$fiber__switch__return$v1()
#define	RUBY_FIBER_TERMINATE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__terminate__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_TERMINATE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$fiber__terminate__entry$v1()
#define	RUBY_FIBER_TERMINATE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$fiber__terminate__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_FIBER_TERMINATE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$fiber__terminate__return$v1()
#define	RUBY_GC_ADD_FREELIST_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__add__freelist__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_ADD_FREELIST_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__add__freelist__entry$v1()
#define	RUBY_GC_ADD_FREELIST_RETURN(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__add__freelist__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_ADD_FREELIST_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__add__freelist__return$v1()
#define	RUBY_GC_FREE_UNUSED_HEAPS_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__free__unused__heaps__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_FREE_UNUSED_HEAPS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__free__unused__heaps__entry$v1()
#define	RUBY_GC_FREE_UNUSED_HEAPS_RETURN(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__free__unused__heaps__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_FREE_UNUSED_HEAPS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__free__unused__heaps__return$v1()
#define	RUBY_GC_GARBAGE_COLLECT_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__garbage__collect__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_GARBAGE_COLLECT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__garbage__collect__entry$v1()
#define	RUBY_GC_GARBAGE_COLLECT_RETURN(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__garbage_collect__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_GARBAGE_COLLECT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__garbage_collect__return$v1()
#define	RUBY_GC_IS_POINTER_TO_HEAP_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__is__pointer__to__heap__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_IS_POINTER_TO_HEAP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__is__pointer__to__heap__entry$v1()
#define	RUBY_GC_IS_POINTER_TO_HEAP_RETURN(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__is__pointer__to__heap__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_IS_POINTER_TO_HEAP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__is__pointer__to__heap__return$v1()
#define	RUBY_GC_MARK_CHILDREN_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__mark__children__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_MARK_CHILDREN_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__mark__children__entry$v1()
#define	RUBY_GC_MARK_CHILDREN_RETURN(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__mark__children__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_MARK_CHILDREN_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__mark__children__return$v1()
#define	RUBY_GC_MARK_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__mark__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_MARK_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__mark__entry$v1()
#define	RUBY_GC_MARK_RETURN(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__mark__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_MARK_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__mark__return$v1()
#define	RUBY_GC_OBJ_FREE_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__obj__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJ_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__obj__free__entry$v1()
#define	RUBY_GC_OBJ_FREE_RETURN(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__obj_free__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJ_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__obj_free__return$v1()
#define	RUBY_GC_OBJSPACE_ALLOC_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__objspace__alloc__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJSPACE_ALLOC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__objspace__alloc__entry$v1()
#define	RUBY_GC_OBJSPACE_ALLOC_RETURN(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__objspace__alloc__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJSPACE_ALLOC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__objspace__alloc__return$v1()
#define	RUBY_GC_OBJSPACE_FREE_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__objspace__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJSPACE_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__objspace__free__entry$v1()
#define	RUBY_GC_OBJSPACE_FREE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__objspace__free__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_OBJSPACE_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__objspace__free__return$v1()
#define	RUBY_GC_SWEEP_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__sweep__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_SWEEP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$gc__sweep__entry$v1()
#define	RUBY_GC_SWEEP_RETURN(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$gc__sweep__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_GC_SWEEP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$gc__sweep__return$v1()
#define	RUBY_INS_GETDYNAMIC_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getdynamic__entry$v1$756e7369676e6564206c6f6e67$756e7369676e6564206c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETDYNAMIC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__getdynamic__entry$v1()
#define	RUBY_INS_GETDYNAMIC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getdynamic__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETDYNAMIC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__getdynamic__return$v1()
#define	RUBY_INS_GETINLINECACHE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getinlinecache__entry$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETINLINECACHE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__getinlinecache__entry$v1()
#define	RUBY_INS_GETINLINECACHE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getinlinecache__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETINLINECACHE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__getinlinecache__return$v1()
#define	RUBY_INS_GETLOCAL_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getlocal__entry$v1$756e7369676e6564206c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETLOCAL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__getlocal__entry$v1()
#define	RUBY_INS_GETLOCAL_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__getlocal__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_GETLOCAL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__getlocal__return$v1()
#define	RUBY_INS_ONCEINLINECACHE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__onceinlinecache__entry$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_ONCEINLINECACHE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__onceinlinecache__entry$v1()
#define	RUBY_INS_ONCEINLINECACHE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__onceinlinecache__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_ONCEINLINECACHE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__onceinlinecache__return$v1()
#define	RUBY_INS_OPT_AREF_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__aref__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_AREF_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__aref__entry$v1()
#define	RUBY_INS_OPT_AREF_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__aref__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_AREF_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__aref__return$v1()
#define	RUBY_INS_OPT_ASET_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__aset__entry$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_ASET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__aset__entry$v1()
#define	RUBY_INS_OPT_ASET_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__aset__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_ASET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__aset__return$v1()
#define	RUBY_INS_OPT_CALL_C_FUNCTION_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__call__c__function__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CALL_C_FUNCTION_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__call__c__function__entry$v1()
#define	RUBY_INS_OPT_CALL_C_FUNCTION_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__call__c__function__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CALL_C_FUNCTION_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__call__c__function__return$v1()
#define	RUBY_INS_OPT_CASE_DISPATCH_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__case__dispatch__entry$v1$6c6f6e67$6c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CASE_DISPATCH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__case__dispatch__entry$v1()
#define	RUBY_INS_OPT_CASE_DISPATCH_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__case__dispatch__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CASE_DISPATCH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__case__dispatch__return$v1()
#define	RUBY_INS_OPT_CHECK_ENV_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__check__env__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CHECK_ENV_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__check__env__entry$v1()
#define	RUBY_INS_OPT_CHECK_ENV_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__check__env__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CHECK_ENV_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__check__env__return$v1()
#define	RUBY_INS_OPT_CHECKENV_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__checkenv__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CHECKENV_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__checkenv__entry$v1()
#define	RUBY_INS_OPT_CHECKENV_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__checkenv__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_CHECKENV_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__checkenv__return$v1()
#define	RUBY_INS_OPT_DIV_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__div__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_DIV_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__div__entry$v1()
#define	RUBY_INS_OPT_DIV_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__div__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_DIV_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__div__return$v1()
#define	RUBY_INS_OPT_EQ_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__eq__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_EQ_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__eq__entry$v1()
#define	RUBY_INS_OPT_EQ_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__eq__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_EQ_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__eq__return$v1()
#define	RUBY_INS_OPT_GE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__ge__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_GE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__ge__entry$v1()
#define	RUBY_INS_OPT_GE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__ge__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_GE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__ge__return$v1()
#define	RUBY_INS_OPT_GT_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__gt__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_GT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__gt__entry$v1()
#define	RUBY_INS_OPT_GT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__gt__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_GT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__gt__return$v1()
#define	RUBY_INS_OPT_LE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__le__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__le__entry$v1()
#define	RUBY_INS_OPT_LE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__le__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__le__return$v1()
#define	RUBY_INS_OPT_LENGTH_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__length__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LENGTH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__length__entry$v1()
#define	RUBY_INS_OPT_LENGTH_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__length__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LENGTH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__length__return$v1()
#define	RUBY_INS_OPT_LT_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__lt__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__lt__entry$v1()
#define	RUBY_INS_OPT_LT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__lt__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__lt__return$v1()
#define	RUBY_INS_OPT_LTLT_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__ltlt__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LTLT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__ltlt__entry$v1()
#define	RUBY_INS_OPT_LTLT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__ltlt__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_LTLT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__ltlt__return$v1()
#define	RUBY_INS_OPT_MINUS_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__minus__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MINUS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__minus__entry$v1()
#define	RUBY_INS_OPT_MINUS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__minus__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MINUS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__minus__return$v1()
#define	RUBY_INS_OPT_MOD_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__mod__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MOD_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__mod__entry$v1()
#define	RUBY_INS_OPT_MOD_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__mod__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MOD_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__mod__return$v1()
#define	RUBY_INS_OPT_MULT_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__mult__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MULT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__mult__entry$v1()
#define	RUBY_INS_OPT_MULT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__mult__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_MULT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__mult__return$v1()
#define	RUBY_INS_OPT_NEQ_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__neq__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_NEQ_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__neq__entry$v1()
#define	RUBY_INS_OPT_NEQ_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__neq__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_NEQ_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__neq__return$v1()
#define	RUBY_INS_OPT_NOT_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__not__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_NOT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__not__entry$v1()
#define	RUBY_INS_OPT_NOT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__not__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_NOT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__not__return$v1()
#define	RUBY_INS_OPT_PLUS_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__plus__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_PLUS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__plus__entry$v1()
#define	RUBY_INS_OPT_PLUS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__plus__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_PLUS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__plus__return$v1()
#define	RUBY_INS_OPT_REGEXPMATCH1_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__regexpmatch1__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_REGEXPMATCH1_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__regexpmatch1__entry$v1()
#define	RUBY_INS_OPT_REGEXPMATCH1_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__regexpmatch1__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_REGEXPMATCH1_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__regexpmatch1__return$v1()
#define	RUBY_INS_OPT_REGEXPMATCH2_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__regexpmatch2__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_REGEXPMATCH2_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__regexpmatch2__entry$v1()
#define	RUBY_INS_OPT_REGEXPMATCH2_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__regexpmatch2__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_REGEXPMATCH2_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__regexpmatch2__return$v1()
#define	RUBY_INS_OPT_SIZE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__size__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_SIZE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__size__entry$v1()
#define	RUBY_INS_OPT_SIZE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__size__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_SIZE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__size__return$v1()
#define	RUBY_INS_OPT_SUCC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__succ__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_SUCC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__succ__entry$v1()
#define	RUBY_INS_OPT_SUCC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__opt__succ__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_OPT_SUCC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__opt__succ__return$v1()
#define	RUBY_INS_SETDYNAMIC_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setdynamic__entry$v1$756e7369676e6564206c6f6e67$756e7369676e6564206c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETDYNAMIC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__setdynamic__entry$v1()
#define	RUBY_INS_SETDYNAMIC_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setdynamic__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETDYNAMIC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__setdynamic__return$v1()
#define	RUBY_INS_SETINLINECACHE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setinlinecache__entry$v1$6c6f6e67$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETINLINECACHE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__setinlinecache__entry$v1()
#define	RUBY_INS_SETINLINECACHE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setinlinecache__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETINLINECACHE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__setinlinecache__return$v1()
#define	RUBY_INS_SETLOCAL_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setlocal__entry$v1$756e7369676e6564206c6f6e67$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETLOCAL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$ins__setlocal__entry$v1()
#define	RUBY_INS_SETLOCAL_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$ins__setlocal__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INS_SETLOCAL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$ins__setlocal__return$v1()
#define	RUBY_INSTANCE_EVAL_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$instance__eval__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INSTANCE_EVAL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$instance__eval__entry$v1()
#define	RUBY_INSTANCE_EVAL_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$instance__eval__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INSTANCE_EVAL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$instance__eval__return$v1()
#define	RUBY_INSTANCE_EXEC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$instance__exec__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INSTANCE_EXEC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$instance__exec__entry$v1()
#define	RUBY_INSTANCE_EXEC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$instance__exec__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_INSTANCE_EXEC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$instance__exec__return$v1()
#define	RUBY_LOOP_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$loop__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_LOOP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$loop__entry$v1()
#define	RUBY_LOOP_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$loop__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_LOOP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$loop__return$v1()
#define	RUBY_MEM_XCALLOC_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xcalloc__entry$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XCALLOC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xcalloc__entry$v1()
#define	RUBY_MEM_XCALLOC_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xcalloc__return$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XCALLOC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xcalloc__return$v1()
#define	RUBY_MEM_XCALLOC2_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xcalloc2__entry$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XCALLOC2_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xcalloc2__entry$v1()
#define	RUBY_MEM_XCALLOC2_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xcalloc2__return$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XCALLOC2_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xcalloc2__return$v1()
#define	RUBY_MEM_XFREE_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xfree__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XFREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xfree__entry$v1()
#define	RUBY_MEM_XFREE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xfree__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XFREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xfree__return$v1()
#define	RUBY_MEM_XMALLOC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xmalloc__entry$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XMALLOC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xmalloc__entry$v1()
#define	RUBY_MEM_XMALLOC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xmalloc__return$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XMALLOC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xmalloc__return$v1()
#define	RUBY_MEM_XMALLOC2_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xmalloc2__entry$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XMALLOC2_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xmalloc2__entry$v1()
#define	RUBY_MEM_XMALLOC2_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xmalloc2__return$v1$6c6f6e67$6c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XMALLOC2_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xmalloc2__return$v1()
#define	RUBY_MEM_XREALLOC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xrealloc__entry$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XREALLOC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mem__xrealloc__entry$v1()
#define	RUBY_MEM_XREALLOC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mem__xrealloc__return$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MEM_XREALLOC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mem__xrealloc__return$v1()
#define	RUBY_METHOD_CALL_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$method__call__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_METHOD_CALL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$method__call__entry$v1()
#define	RUBY_METHOD_CALL_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$method__call__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_METHOD_CALL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$method__call__return$v1()
#define	RUBY_METHOD_MISSING_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$method__missing__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_METHOD_MISSING_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$method__missing__entry$v1()
#define	RUBY_METHOD_MISSING_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$method__missing__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_METHOD_MISSING_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$method__missing__return$v1()
#define	RUBY_MOD_CONST_DEFINED_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__defined__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_DEFINED_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__defined__entry$v1()
#define	RUBY_MOD_CONST_DEFINED_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__defined__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_DEFINED_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__defined__return$v1()
#define	RUBY_MOD_CONST_GET_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__get__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_GET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__get__entry$v1()
#define	RUBY_MOD_CONST_GET_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__get__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_GET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__get__return$v1()
#define	RUBY_MOD_CONST_SET_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__set__entry$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_SET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__set__entry$v1()
#define	RUBY_MOD_CONST_SET_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__const__set__return$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CONST_SET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__const__set__return$v1()
#define	RUBY_MOD_CVAR_DEFINED_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__defined__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_DEFINED_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__defined__entry$v1()
#define	RUBY_MOD_CVAR_DEFINED_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__defined__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_DEFINED_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__defined__return$v1()
#define	RUBY_MOD_CVAR_GET_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__get__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_GET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__get__entry$v1()
#define	RUBY_MOD_CVAR_GET_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__get__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_GET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__get__return$v1()
#define	RUBY_MOD_CVAR_SET_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__set__entry$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_SET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__set__entry$v1()
#define	RUBY_MOD_CVAR_SET_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__cvar__set__return$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_CVAR_SET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__cvar__set__return$v1()
#define	RUBY_MOD_INITIALIZE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__initialize__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_INITIALIZE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mod__initialize__entry$v1()
#define	RUBY_MOD_INITIALIZE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mod__initialize__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MOD_INITIALIZE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mod__initialize__return$v1()
#define	RUBY_MODULE_EVAL_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$module__eval__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MODULE_EVAL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$module__eval__entry$v1()
#define	RUBY_MODULE_EVAL_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$module__eval__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MODULE_EVAL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$module__eval__return$v1()
#define	RUBY_MODULE_EXEC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$module__exec__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MODULE_EXEC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$module__exec__entry$v1()
#define	RUBY_MODULE_EXEC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$module__exec__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MODULE_EXEC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$module__exec__return$v1()
#define	RUBY_MT_ADD_METHOD_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__add__method__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_ADD_METHOD_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__add__method__entry$v1()
#define	RUBY_MT_ADD_METHOD_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__add__method__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_ADD_METHOD_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__add__method__return$v1()
#define	RUBY_MT_CLEAR_CACHE_CLASS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__class__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_CLASS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__class__entry$v1()
#define	RUBY_MT_CLEAR_CACHE_CLASS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__class__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_CLASS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__class__return$v1()
#define	RUBY_MT_CLEAR_CACHE_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__entry$v1()
#define	RUBY_MT_CLEAR_CACHE_ID_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__id__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_ID_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__id__entry$v1()
#define	RUBY_MT_CLEAR_CACHE_ID_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__id__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_ID_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__id__return$v1()
#define	RUBY_MT_CLEAR_CACHE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__return$v1()
#define	RUBY_MT_CLEAR_CACHE_UNDEF_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__undef__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_UNDEF_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__undef__entry$v1()
#define	RUBY_MT_CLEAR_CACHE_UNDEF_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__clear__cache__undef__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_CLEAR_CACHE_UNDEF_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__clear__cache__undef__return$v1()
#define	RUBY_MT_GET_METHOD_ENTRY_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__get__method__entry__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_GET_METHOD_ENTRY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__get__method__entry__entry$v1()
#define	RUBY_MT_GET_METHOD_ENTRY_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__get__method__entry__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_GET_METHOD_ENTRY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__get__method__entry__return$v1()
#define	RUBY_MT_METHOD_ENTRY_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__method__entry__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_METHOD_ENTRY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__method__entry__entry$v1()
#define	RUBY_MT_METHOD_ENTRY_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__method__entry__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_METHOD_ENTRY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__method__entry__return$v1()
#define	RUBY_MT_REMOVE_METHOD_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__remove__method__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_REMOVE_METHOD_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$mt__remove__method__entry$v1()
#define	RUBY_MT_REMOVE_METHOD_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$mt__remove__method__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_MT_REMOVE_METHOD_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$mt__remove__method__return$v1()
#define	RUBY_OBJ_ALLOC_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__alloc__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_ALLOC_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__alloc__entry$v1()
#define	RUBY_OBJ_ALLOC_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__alloc__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_ALLOC_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__alloc__return$v1()
#define	RUBY_OBJ_CLONE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__clone__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_CLONE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__clone__entry$v1()
#define	RUBY_OBJ_CLONE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__clone__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_CLONE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__clone__return$v1()
#define	RUBY_OBJ_DUP_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__dup__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_DUP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__dup__entry$v1()
#define	RUBY_OBJ_DUP_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__dup__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_DUP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__dup__return$v1()
#define	RUBY_OBJ_FREEZE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__freeze__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_FREEZE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__freeze__entry$v1()
#define	RUBY_OBJ_FREEZE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__freeze__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_FREEZE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__freeze__return$v1()
#define	RUBY_OBJ_FROZEN_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__frozen__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_FROZEN_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__frozen__entry$v1()
#define	RUBY_OBJ_FROZEN_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__frozen__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_FROZEN_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__frozen__return$v1()
#define	RUBY_OBJ_INSPECT_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__inspect__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_INSPECT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__inspect__entry$v1()
#define	RUBY_OBJ_INSPECT_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__inspect__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_INSPECT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__inspect__return$v1()
#define	RUBY_OBJ_INSTANCE_OF_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__instance__of__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_INSTANCE_OF_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__instance__of__entry$v1()
#define	RUBY_OBJ_INSTANCE_OF_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__instance__of__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_INSTANCE_OF_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__instance__of__return$v1()
#define	RUBY_OBJ_IVAR_DEFINED_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__defined__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_DEFINED_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__defined__entry$v1()
#define	RUBY_OBJ_IVAR_DEFINED_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__defined__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_DEFINED_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__defined__return$v1()
#define	RUBY_OBJ_IVAR_GET_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__get__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_GET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__get__entry$v1()
#define	RUBY_OBJ_IVAR_GET_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__get__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_GET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__get__return$v1()
#define	RUBY_OBJ_IVAR_SET_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__set__entry$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_SET_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__set__entry$v1()
#define	RUBY_OBJ_IVAR_SET_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__ivar__set__return$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_IVAR_SET_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__ivar__set__return$v1()
#define	RUBY_OBJ_KIND_OF_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__kind__of__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_KIND_OF_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__kind__of__entry$v1()
#define	RUBY_OBJ_KIND_OF_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__kind__of__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_KIND_OF_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__kind__of__return$v1()
#define	RUBY_OBJ_METHODS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__methods__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_METHODS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__methods__entry$v1()
#define	RUBY_OBJ_METHODS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__methods__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_METHODS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__methods__return$v1()
#define	RUBY_OBJ_PRIVATE_METHODS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__private__methods__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PRIVATE_METHODS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__private__methods__entry$v1()
#define	RUBY_OBJ_PRIVATE_METHODS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__private__methods__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PRIVATE_METHODS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__private__methods__return$v1()
#define	RUBY_OBJ_PROTECTED_METHODS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__protected__methods__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PROTECTED_METHODS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__protected__methods__entry$v1()
#define	RUBY_OBJ_PROTECTED_METHODS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__protected__methods__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PROTECTED_METHODS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__protected__methods__return$v1()
#define	RUBY_OBJ_PUBLIC_METHODS_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__public__methods__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PUBLIC_METHODS_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$obj__public__methods__entry$v1()
#define	RUBY_OBJ_PUBLIC_METHODS_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$obj__public__methods__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_OBJ_PUBLIC_METHODS_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$obj__public__methods__return$v1()
#define	RUBY_PROC_CALL_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__call__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_CALL_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$proc__call__entry$v1()
#define	RUBY_PROC_CALL_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__call__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_CALL_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$proc__call__return$v1()
#define	RUBY_PROC_DUP_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__dup__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_DUP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$proc__dup__entry$v1()
#define	RUBY_PROC_DUP_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__dup__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_DUP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$proc__dup__return$v1()
#define	RUBY_PROC_FREE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__free__entry$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$proc__free__entry$v1()
#define	RUBY_PROC_FREE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__free__return$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$proc__free__return$v1()
#define	RUBY_PROC_MARK_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__mark__entry$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_MARK_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$proc__mark__entry$v1()
#define	RUBY_PROC_MARK_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__mark__return$v1$766f6964202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_MARK_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$proc__mark__return$v1()
#define	RUBY_PROC_NEW_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__new__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_NEW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$proc__new__entry$v1()
#define	RUBY_PROC_NEW_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$proc__new__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_PROC_NEW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$proc__new__return$v1()
#define	RUBY_RB_TRACE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$rb__trace__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_RB_TRACE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$rb__trace__entry$v1()
#define	RUBY_RB_TRACE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$rb__trace__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_RB_TRACE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$rb__trace__return$v1()
#define	RUBY_SEND_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$send__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_SEND_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$send__entry$v1()
#define	RUBY_SEND_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$send__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_SEND_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$send__return$v1()
#define	RUBY_ST_ADD_DIRECT_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__add__direct__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_ADD_DIRECT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__add__direct__entry$v1()
#define	RUBY_ST_ADD_DIRECT_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__add__direct__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_ADD_DIRECT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__add__direct__return$v1()
#define	RUBY_ST_CLEANUP_SAFE_ENTRY(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__cleanup__safe__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_CLEANUP_SAFE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__cleanup__safe__entry$v1()
#define	RUBY_ST_CLEANUP_SAFE_RETURN(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__cleanup__safe__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_CLEANUP_SAFE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__cleanup__safe__return$v1()
#define	RUBY_ST_CLEAR_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__clear__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_CLEAR_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__clear__entry$v1()
#define	RUBY_ST_CLEAR_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__clear__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_CLEAR_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__clear__return$v1()
#define	RUBY_ST_COPY_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__copy__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_COPY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__copy__entry$v1()
#define	RUBY_ST_COPY_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__copy__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_COPY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__copy__return$v1()
#define	RUBY_ST_DELETE_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__delete__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_DELETE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__delete__entry$v1()
#define	RUBY_ST_DELETE_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__delete__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_DELETE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__delete__return$v1()
#define	RUBY_ST_DELETE_SAFE_ENTRY(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__delete__safe__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_DELETE_SAFE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__delete__safe__entry$v1()
#define	RUBY_ST_DELETE_SAFE_RETURN(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__delete__safe__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_DELETE_SAFE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__delete__safe__return$v1()
#define	RUBY_ST_FREE_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__free__entry$v1()
#define	RUBY_ST_FREE_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__free__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__free__return$v1()
#define	RUBY_ST_GET_KEY_ENTRY(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__get__key__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_GET_KEY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__get__key__entry$v1()
#define	RUBY_ST_GET_KEY_RETURN(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__get__key__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_GET_KEY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__get__key__return$v1()
#define	RUBY_ST_INIT_NUMTABLE_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__numtable__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_NUMTABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__numtable__entry$v1()
#define	RUBY_ST_INIT_NUMTABLE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__numtable__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_NUMTABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__numtable__return$v1()
#define	RUBY_ST_INIT_SIZED_NUMTABLE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__numtable__entry$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_NUMTABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__numtable__entry$v1()
#define	RUBY_ST_INIT_SIZED_NUMTABLE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__numtable__return$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_NUMTABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__numtable__return$v1()
#define	RUBY_ST_INIT_SIZED_STRCASETABLE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__strcasetable__entry$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_STRCASETABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__strcasetable__entry$v1()
#define	RUBY_ST_INIT_SIZED_STRCASETABLE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__strcasetable__return$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_STRCASETABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__strcasetable__return$v1()
#define	RUBY_ST_INIT_SIZED_STRTABLE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__strtable__entry$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_STRTABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__strtable__entry$v1()
#define	RUBY_ST_INIT_SIZED_STRTABLE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__sized__strtable__return$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_SIZED_STRTABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__sized__strtable__return$v1()
#define	RUBY_ST_INIT_STRCASETABLE_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__strcasetable__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_STRCASETABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__strcasetable__entry$v1()
#define	RUBY_ST_INIT_STRCASETABLE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__strcasetable__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_STRCASETABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__strcasetable__return$v1()
#define	RUBY_ST_INIT_STRTABLE_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__strtable__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_STRTABLE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__init__strtable__entry$v1()
#define	RUBY_ST_INIT_STRTABLE_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__init__strtable__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INIT_STRTABLE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__init__strtable__return$v1()
#define	RUBY_ST_INSERT_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__insert__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INSERT_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__insert__entry$v1()
#define	RUBY_ST_INSERT_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__insert__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INSERT_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__insert__return$v1()
#define	RUBY_ST_INSERT2_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__insert2__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INSERT2_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__insert2__entry$v1()
#define	RUBY_ST_INSERT2_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__insert2__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_INSERT2_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__insert2__return$v1()
#define	RUBY_ST_LOOKUP_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__lookup__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_LOOKUP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$st__lookup__entry$v1()
#define	RUBY_ST_LOOKUP_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$st__lookup__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_ST_LOOKUP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$st__lookup__return$v1()
#define	RUBY_STR_BUF_CSTR_NEW_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__buf__cstr__new__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_BUF_CSTR_NEW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__buf__cstr__new__entry$v1()
#define	RUBY_STR_BUF_CSTR_NEW_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__buf__cstr__new__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_BUF_CSTR_NEW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__buf__cstr__new__return$v1()
#define	RUBY_STR_BUF_NEW_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__buf__new__entry$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_BUF_NEW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__buf__new__entry$v1()
#define	RUBY_STR_BUF_NEW_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__buf__new__return$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_BUF_NEW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__buf__new__return$v1()
#define	RUBY_STR_DEC_LENGTH_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__dec__length__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_DEC_LENGTH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__dec__length__entry$v1()
#define	RUBY_STR_DEC_LENGTH_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__dec__length__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_DEC_LENGTH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__dec__length__return$v1()
#define	RUBY_STR_DUP_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__dup__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_DUP_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__dup__entry$v1()
#define	RUBY_STR_DUP_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__dup__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_DUP_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__dup__return$v1()
#define	RUBY_STR_FREE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__free__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_FREE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__free__entry$v1()
#define	RUBY_STR_FREE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__free__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_FREE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__free__return$v1()
#define	RUBY_STR_NEW_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__new__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_NEW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__new__entry$v1()
#define	RUBY_STR_NEW_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__new__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_NEW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__new__return$v1()
#define	RUBY_STR_NEW_SHARED_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__new__shared__entry$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_NEW_SHARED_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__new__shared__entry$v1()
#define	RUBY_STR_NEW_SHARED_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__new__shared__return$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_NEW_SHARED_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__new__shared__return$v1()
#define	RUBY_STR_REPLACE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__replace__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_REPLACE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__replace__entry$v1()
#define	RUBY_STR_REPLACE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__replace__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_REPLACE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__replace__return$v1()
#define	RUBY_STR_RESIZE_CAPACITY_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__resize__capacity__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_RESIZE_CAPACITY_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__resize__capacity__entry$v1()
#define	RUBY_STR_RESIZE_CAPACITY_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__resize__capacity__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_RESIZE_CAPACITY_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__resize__capacity__return$v1()
#define	RUBY_STR_SET_LENGTH_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__set__length__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_SET_LENGTH_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__set__length__entry$v1()
#define	RUBY_STR_SET_LENGTH_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__set__length__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_SET_LENGTH_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__set__length__return$v1()
#define	RUBY_STR_SHARED_REPLACE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__shared__replace__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_SHARED_REPLACE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$str__shared__replace__entry$v1()
#define	RUBY_STR_SHARED_REPLACE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$str__shared__replace__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_STR_SHARED_REPLACE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$str__shared__replace__return$v1()
#define	RUBY_SUPER_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$super__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_SUPER_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$super__entry$v1()
#define	RUBY_SUPER_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$super__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_SUPER_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$super__return$v1()
#define	RUBY_THROW_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$throw__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_THROW_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$throw__entry$v1()
#define	RUBY_THROW_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$throw__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_THROW_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$throw__return$v1()
#define	RUBY_VM_CHANGE_STATE_ENTRY(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$vm__change__state__entry$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_VM_CHANGE_STATE_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$vm__change__state__entry$v1()
#define	RUBY_VM_CHANGE_STATE_RETURN(arg0) \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$vm__change__state__return$v1$696e74(arg0); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_VM_CHANGE_STATE_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$vm__change__state__return$v1()
#define	RUBY_YIELD_ENTRY() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$yield__entry$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_YIELD_ENTRY_ENABLED() \
	__dtrace_isenabled$ruby$yield__entry$v1()
#define	RUBY_YIELD_RETURN() \
do { \
	__asm__ volatile(".reference " RUBY_TYPEDEFS); \
	__dtrace_probe$ruby$yield__return$v1(); \
	__asm__ volatile(".reference " RUBY_STABILITY); \
} while (0)
#define	RUBY_YIELD_RETURN_ENABLED() \
	__dtrace_isenabled$ruby$yield__return$v1()


extern void __dtrace_probe$ruby$binding__dup__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$binding__dup__entry$v1(void);
extern void __dtrace_probe$ruby$binding__dup__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$binding__dup__return$v1(void);
extern void __dtrace_probe$ruby$binding__free__entry$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$binding__free__entry$v1(void);
extern void __dtrace_probe$ruby$binding__free__return$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$binding__free__return$v1(void);
extern void __dtrace_probe$ruby$binding__mark__entry$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$binding__mark__entry$v1(void);
extern void __dtrace_probe$ruby$binding__mark__return$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$binding__mark__return$v1(void);
extern void __dtrace_probe$ruby$binding__new__entry$v1(void);
extern int __dtrace_isenabled$ruby$binding__new__entry$v1(void);
extern void __dtrace_probe$ruby$binding__new__return$v1(void);
extern int __dtrace_isenabled$ruby$binding__new__return$v1(void);
extern void __dtrace_probe$ruby$block__call__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$block__call__entry$v1(void);
extern void __dtrace_probe$ruby$block__call__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$block__call__return$v1(void);
extern void __dtrace_probe$ruby$block__given__entry$v1(void);
extern int __dtrace_isenabled$ruby$block__given__entry$v1(void);
extern void __dtrace_probe$ruby$block__given__return$v1(void);
extern int __dtrace_isenabled$ruby$block__given__return$v1(void);
extern void __dtrace_probe$ruby$caller__entry$v1(void);
extern int __dtrace_isenabled$ruby$caller__entry$v1(void);
extern void __dtrace_probe$ruby$caller__return$v1(void);
extern int __dtrace_isenabled$ruby$caller__return$v1(void);
extern void __dtrace_probe$ruby$catch__entry$v1(void);
extern int __dtrace_isenabled$ruby$catch__entry$v1(void);
extern void __dtrace_probe$ruby$catch__return$v1(void);
extern int __dtrace_isenabled$ruby$catch__return$v1(void);
extern void __dtrace_probe$ruby$class__initialize__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$class__initialize__entry$v1(void);
extern void __dtrace_probe$ruby$class__initialize__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$class__initialize__return$v1(void);
extern void __dtrace_probe$ruby$class__superclass__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$class__superclass__entry$v1(void);
extern void __dtrace_probe$ruby$class__superclass__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$class__superclass__return$v1(void);
extern void __dtrace_probe$ruby$coerce__array__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__array__entry$v1(void);
extern void __dtrace_probe$ruby$coerce__array__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__array__return$v1(void);
extern void __dtrace_probe$ruby$coerce__float__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__float__entry$v1(void);
extern void __dtrace_probe$ruby$coerce__float__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__float__return$v1(void);
extern void __dtrace_probe$ruby$coerce__integer__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__integer__entry$v1(void);
extern void __dtrace_probe$ruby$coerce__integer__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__integer__return$v1(void);
extern void __dtrace_probe$ruby$coerce__string__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__string__entry$v1(void);
extern void __dtrace_probe$ruby$coerce__string__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$coerce__string__return$v1(void);
extern void __dtrace_probe$ruby$convert__type__entry$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$convert__type__entry$v1(void);
extern void __dtrace_probe$ruby$convert__type__return$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$convert__type__return$v1(void);
extern void __dtrace_probe$ruby$evalstr__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$evalstr__entry$v1(void);
extern void __dtrace_probe$ruby$evalstr__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$evalstr__return$v1(void);
extern void __dtrace_probe$ruby$fiber__free__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__free__entry$v1(void);
extern void __dtrace_probe$ruby$fiber__free__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__free__return$v1(void);
extern void __dtrace_probe$ruby$fiber__mark__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__mark__entry$v1(void);
extern void __dtrace_probe$ruby$fiber__mark__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__mark__return$v1(void);
extern void __dtrace_probe$ruby$fiber__start__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__start__entry$v1(void);
extern void __dtrace_probe$ruby$fiber__start__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__start__return$v1(void);
extern void __dtrace_probe$ruby$fiber__switch__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__switch__entry$v1(void);
extern void __dtrace_probe$ruby$fiber__switch__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__switch__return$v1(void);
extern void __dtrace_probe$ruby$fiber__terminate__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__terminate__entry$v1(void);
extern void __dtrace_probe$ruby$fiber__terminate__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$fiber__terminate__return$v1(void);
extern void __dtrace_probe$ruby$gc__add__freelist__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(long, long, long, long, long, unsigned int, void *);
extern int __dtrace_isenabled$ruby$gc__add__freelist__entry$v1(void);
extern void __dtrace_probe$ruby$gc__add__freelist__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(long, long, long, long, long, unsigned int, void *);
extern int __dtrace_isenabled$ruby$gc__add__freelist__return$v1(void);
extern void __dtrace_probe$ruby$gc__free__unused__heaps__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__free__unused__heaps__entry$v1(void);
extern void __dtrace_probe$ruby$gc__free__unused__heaps__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__free__unused__heaps__return$v1(void);
extern void __dtrace_probe$ruby$gc__garbage__collect__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__garbage__collect__entry$v1(void);
extern void __dtrace_probe$ruby$gc__garbage_collect__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__garbage_collect__return$v1(void);
extern void __dtrace_probe$ruby$gc__is__pointer__to__heap__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(long, long, long, long, long, unsigned int, void *);
extern int __dtrace_isenabled$ruby$gc__is__pointer__to__heap__entry$v1(void);
extern void __dtrace_probe$ruby$gc__is__pointer__to__heap__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a(long, long, long, long, long, unsigned int, void *);
extern int __dtrace_isenabled$ruby$gc__is__pointer__to__heap__return$v1(void);
extern void __dtrace_probe$ruby$gc__mark__children__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(long, long, long, long, long, unsigned int, void *, int);
extern int __dtrace_isenabled$ruby$gc__mark__children__entry$v1(void);
extern void __dtrace_probe$ruby$gc__mark__children__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(long, long, long, long, long, unsigned int, void *, int);
extern int __dtrace_isenabled$ruby$gc__mark__children__return$v1(void);
extern void __dtrace_probe$ruby$gc__mark__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(long, long, long, long, long, unsigned int, void *, int);
extern int __dtrace_isenabled$ruby$gc__mark__entry$v1(void);
extern void __dtrace_probe$ruby$gc__mark__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$766f6964202a$696e74(long, long, long, long, long, unsigned int, void *, int);
extern int __dtrace_isenabled$ruby$gc__mark__return$v1(void);
extern void __dtrace_probe$ruby$gc__obj__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$63686172202a(long, long, long, long, long, unsigned int, char *);
extern int __dtrace_isenabled$ruby$gc__obj__free__entry$v1(void);
extern void __dtrace_probe$ruby$gc__obj_free__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74$63686172202a(long, long, long, long, long, unsigned int, char *);
extern int __dtrace_isenabled$ruby$gc__obj_free__return$v1(void);
extern void __dtrace_probe$ruby$gc__objspace__alloc__entry$v1(void);
extern int __dtrace_isenabled$ruby$gc__objspace__alloc__entry$v1(void);
extern void __dtrace_probe$ruby$gc__objspace__alloc__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__objspace__alloc__return$v1(void);
extern void __dtrace_probe$ruby$gc__objspace__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__objspace__free__entry$v1(void);
extern void __dtrace_probe$ruby$gc__objspace__free__return$v1(void);
extern int __dtrace_isenabled$ruby$gc__objspace__free__return$v1(void);
extern void __dtrace_probe$ruby$gc__sweep__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__sweep__entry$v1(void);
extern void __dtrace_probe$ruby$gc__sweep__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$756e7369676e656420696e74(long, long, long, long, long, unsigned int);
extern int __dtrace_isenabled$ruby$gc__sweep__return$v1(void);
extern void __dtrace_probe$ruby$ins__getdynamic__entry$v1$756e7369676e6564206c6f6e67$756e7369676e6564206c6f6e67(unsigned long, unsigned long);
extern int __dtrace_isenabled$ruby$ins__getdynamic__entry$v1(void);
extern void __dtrace_probe$ruby$ins__getdynamic__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__getdynamic__return$v1(void);
extern void __dtrace_probe$ruby$ins__getinlinecache__entry$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$ins__getinlinecache__entry$v1(void);
extern void __dtrace_probe$ruby$ins__getinlinecache__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__getinlinecache__return$v1(void);
extern void __dtrace_probe$ruby$ins__getlocal__entry$v1$756e7369676e6564206c6f6e67(unsigned long);
extern int __dtrace_isenabled$ruby$ins__getlocal__entry$v1(void);
extern void __dtrace_probe$ruby$ins__getlocal__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__getlocal__return$v1(void);
extern void __dtrace_probe$ruby$ins__onceinlinecache__entry$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$ins__onceinlinecache__entry$v1(void);
extern void __dtrace_probe$ruby$ins__onceinlinecache__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__onceinlinecache__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__aref__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__aref__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__aref__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__aref__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__aset__entry$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__aset__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__aset__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__aset__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__call__c__function__entry$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__call__c__function__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__call__c__function__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__call__c__function__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__case__dispatch__entry$v1$6c6f6e67$6c6f6e67$63686172202a(long, long, char *);
extern int __dtrace_isenabled$ruby$ins__opt__case__dispatch__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__case__dispatch__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__case__dispatch__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__check__env__entry$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__check__env__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__check__env__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__check__env__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__checkenv__entry$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__checkenv__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__checkenv__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__opt__checkenv__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__div__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__div__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__div__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__div__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__eq__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__eq__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__eq__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__eq__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__ge__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__ge__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__ge__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__ge__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__gt__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__gt__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__gt__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__gt__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__le__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__le__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__le__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__le__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__length__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__length__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__length__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__length__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__lt__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__lt__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__lt__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__lt__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__ltlt__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__ltlt__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__ltlt__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__ltlt__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__minus__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__minus__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__minus__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__minus__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__mod__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__mod__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__mod__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__mod__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__mult__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__mult__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__mult__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__mult__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__neq__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__neq__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__neq__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__neq__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__not__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__not__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__not__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__not__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__plus__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__plus__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__plus__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__plus__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__regexpmatch1__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__regexpmatch1__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__regexpmatch1__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__regexpmatch1__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__regexpmatch2__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$ins__opt__regexpmatch2__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__regexpmatch2__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__regexpmatch2__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__size__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__size__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__size__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__size__return$v1(void);
extern void __dtrace_probe$ruby$ins__opt__succ__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__succ__entry$v1(void);
extern void __dtrace_probe$ruby$ins__opt__succ__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__opt__succ__return$v1(void);
extern void __dtrace_probe$ruby$ins__setdynamic__entry$v1$756e7369676e6564206c6f6e67$756e7369676e6564206c6f6e67$63686172202a(unsigned long, unsigned long, char *);
extern int __dtrace_isenabled$ruby$ins__setdynamic__entry$v1(void);
extern void __dtrace_probe$ruby$ins__setdynamic__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__setdynamic__return$v1(void);
extern void __dtrace_probe$ruby$ins__setinlinecache__entry$v1$6c6f6e67$63686172202a(long, char *);
extern int __dtrace_isenabled$ruby$ins__setinlinecache__entry$v1(void);
extern void __dtrace_probe$ruby$ins__setinlinecache__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$ins__setinlinecache__return$v1(void);
extern void __dtrace_probe$ruby$ins__setlocal__entry$v1$756e7369676e6564206c6f6e67$63686172202a(unsigned long, char *);
extern int __dtrace_isenabled$ruby$ins__setlocal__entry$v1(void);
extern void __dtrace_probe$ruby$ins__setlocal__return$v1(void);
extern int __dtrace_isenabled$ruby$ins__setlocal__return$v1(void);
extern void __dtrace_probe$ruby$instance__eval__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$instance__eval__entry$v1(void);
extern void __dtrace_probe$ruby$instance__eval__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$instance__eval__return$v1(void);
extern void __dtrace_probe$ruby$instance__exec__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$instance__exec__entry$v1(void);
extern void __dtrace_probe$ruby$instance__exec__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$instance__exec__return$v1(void);
extern void __dtrace_probe$ruby$loop__entry$v1(void);
extern int __dtrace_isenabled$ruby$loop__entry$v1(void);
extern void __dtrace_probe$ruby$loop__return$v1(void);
extern int __dtrace_isenabled$ruby$loop__return$v1(void);
extern void __dtrace_probe$ruby$mem__xcalloc__entry$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xcalloc__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xcalloc__return$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xcalloc__return$v1(void);
extern void __dtrace_probe$ruby$mem__xcalloc2__entry$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xcalloc2__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xcalloc2__return$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xcalloc2__return$v1(void);
extern void __dtrace_probe$ruby$mem__xfree__entry$v1(void);
extern int __dtrace_isenabled$ruby$mem__xfree__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xfree__return$v1(void);
extern int __dtrace_isenabled$ruby$mem__xfree__return$v1(void);
extern void __dtrace_probe$ruby$mem__xmalloc__entry$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$mem__xmalloc__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xmalloc__return$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$mem__xmalloc__return$v1(void);
extern void __dtrace_probe$ruby$mem__xmalloc2__entry$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xmalloc2__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xmalloc2__return$v1$6c6f6e67$6c6f6e67(long, long);
extern int __dtrace_isenabled$ruby$mem__xmalloc2__return$v1(void);
extern void __dtrace_probe$ruby$mem__xrealloc__entry$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$mem__xrealloc__entry$v1(void);
extern void __dtrace_probe$ruby$mem__xrealloc__return$v1$6c6f6e67(long);
extern int __dtrace_isenabled$ruby$mem__xrealloc__return$v1(void);
extern void __dtrace_probe$ruby$method__call__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$method__call__entry$v1(void);
extern void __dtrace_probe$ruby$method__call__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$method__call__return$v1(void);
extern void __dtrace_probe$ruby$method__missing__entry$v1(void);
extern int __dtrace_isenabled$ruby$method__missing__entry$v1(void);
extern void __dtrace_probe$ruby$method__missing__return$v1(void);
extern int __dtrace_isenabled$ruby$method__missing__return$v1(void);
extern void __dtrace_probe$ruby$mod__const__defined__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__const__defined__entry$v1(void);
extern void __dtrace_probe$ruby$mod__const__defined__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__const__defined__return$v1(void);
extern void __dtrace_probe$ruby$mod__const__get__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__const__get__entry$v1(void);
extern void __dtrace_probe$ruby$mod__const__get__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__const__get__return$v1(void);
extern void __dtrace_probe$ruby$mod__const__set__entry$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$mod__const__set__entry$v1(void);
extern void __dtrace_probe$ruby$mod__const__set__return$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$mod__const__set__return$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__defined__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__defined__entry$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__defined__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__defined__return$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__get__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__get__entry$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__get__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__get__return$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__set__entry$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__set__entry$v1(void);
extern void __dtrace_probe$ruby$mod__cvar__set__return$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$mod__cvar__set__return$v1(void);
extern void __dtrace_probe$ruby$mod__initialize__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__initialize__entry$v1(void);
extern void __dtrace_probe$ruby$mod__initialize__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mod__initialize__return$v1(void);
extern void __dtrace_probe$ruby$module__eval__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$module__eval__entry$v1(void);
extern void __dtrace_probe$ruby$module__eval__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$module__eval__return$v1(void);
extern void __dtrace_probe$ruby$module__exec__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$module__exec__entry$v1(void);
extern void __dtrace_probe$ruby$module__exec__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$module__exec__return$v1(void);
extern void __dtrace_probe$ruby$mt__add__method__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__add__method__entry$v1(void);
extern void __dtrace_probe$ruby$mt__add__method__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__add__method__return$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__class__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__class__entry$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__class__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__class__return$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__entry$v1(void);
extern int __dtrace_isenabled$ruby$mt__clear__cache__entry$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__id__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__id__entry$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__id__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__id__return$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__return$v1(void);
extern int __dtrace_isenabled$ruby$mt__clear__cache__return$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__undef__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__undef__entry$v1(void);
extern void __dtrace_probe$ruby$mt__clear__cache__undef__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__clear__cache__undef__return$v1(void);
extern void __dtrace_probe$ruby$mt__get__method__entry__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__get__method__entry__entry$v1(void);
extern void __dtrace_probe$ruby$mt__get__method__entry__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__get__method__entry__return$v1(void);
extern void __dtrace_probe$ruby$mt__method__entry__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__method__entry__entry$v1(void);
extern void __dtrace_probe$ruby$mt__method__entry__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__method__entry__return$v1(void);
extern void __dtrace_probe$ruby$mt__remove__method__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__remove__method__entry$v1(void);
extern void __dtrace_probe$ruby$mt__remove__method__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$mt__remove__method__return$v1(void);
extern void __dtrace_probe$ruby$obj__alloc__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__alloc__entry$v1(void);
extern void __dtrace_probe$ruby$obj__alloc__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__alloc__return$v1(void);
extern void __dtrace_probe$ruby$obj__clone__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__clone__entry$v1(void);
extern void __dtrace_probe$ruby$obj__clone__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__clone__return$v1(void);
extern void __dtrace_probe$ruby$obj__dup__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__dup__entry$v1(void);
extern void __dtrace_probe$ruby$obj__dup__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__dup__return$v1(void);
extern void __dtrace_probe$ruby$obj__freeze__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__freeze__entry$v1(void);
extern void __dtrace_probe$ruby$obj__freeze__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__freeze__return$v1(void);
extern void __dtrace_probe$ruby$obj__frozen__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__frozen__entry$v1(void);
extern void __dtrace_probe$ruby$obj__frozen__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__frozen__return$v1(void);
extern void __dtrace_probe$ruby$obj__inspect__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__inspect__entry$v1(void);
extern void __dtrace_probe$ruby$obj__inspect__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__inspect__return$v1(void);
extern void __dtrace_probe$ruby$obj__instance__of__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__instance__of__entry$v1(void);
extern void __dtrace_probe$ruby$obj__instance__of__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__instance__of__return$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__defined__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__defined__entry$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__defined__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__defined__return$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__get__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__get__entry$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__get__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__get__return$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__set__entry$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__set__entry$v1(void);
extern void __dtrace_probe$ruby$obj__ivar__set__return$v1$63686172202a$63686172202a$63686172202a(char *, char *, char *);
extern int __dtrace_isenabled$ruby$obj__ivar__set__return$v1(void);
extern void __dtrace_probe$ruby$obj__kind__of__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__kind__of__entry$v1(void);
extern void __dtrace_probe$ruby$obj__kind__of__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$obj__kind__of__return$v1(void);
extern void __dtrace_probe$ruby$obj__methods__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__methods__entry$v1(void);
extern void __dtrace_probe$ruby$obj__methods__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__methods__return$v1(void);
extern void __dtrace_probe$ruby$obj__private__methods__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__private__methods__entry$v1(void);
extern void __dtrace_probe$ruby$obj__private__methods__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__private__methods__return$v1(void);
extern void __dtrace_probe$ruby$obj__protected__methods__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__protected__methods__entry$v1(void);
extern void __dtrace_probe$ruby$obj__protected__methods__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__protected__methods__return$v1(void);
extern void __dtrace_probe$ruby$obj__public__methods__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__public__methods__entry$v1(void);
extern void __dtrace_probe$ruby$obj__public__methods__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$obj__public__methods__return$v1(void);
extern void __dtrace_probe$ruby$proc__call__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$proc__call__entry$v1(void);
extern void __dtrace_probe$ruby$proc__call__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$proc__call__return$v1(void);
extern void __dtrace_probe$ruby$proc__dup__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$proc__dup__entry$v1(void);
extern void __dtrace_probe$ruby$proc__dup__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$proc__dup__return$v1(void);
extern void __dtrace_probe$ruby$proc__free__entry$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$proc__free__entry$v1(void);
extern void __dtrace_probe$ruby$proc__free__return$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$proc__free__return$v1(void);
extern void __dtrace_probe$ruby$proc__mark__entry$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$proc__mark__entry$v1(void);
extern void __dtrace_probe$ruby$proc__mark__return$v1$766f6964202a(void *);
extern int __dtrace_isenabled$ruby$proc__mark__return$v1(void);
extern void __dtrace_probe$ruby$proc__new__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$proc__new__entry$v1(void);
extern void __dtrace_probe$ruby$proc__new__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$proc__new__return$v1(void);
extern void __dtrace_probe$ruby$rb__trace__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$rb__trace__entry$v1(void);
extern void __dtrace_probe$ruby$rb__trace__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$rb__trace__return$v1(void);
extern void __dtrace_probe$ruby$send__entry$v1(void);
extern int __dtrace_isenabled$ruby$send__entry$v1(void);
extern void __dtrace_probe$ruby$send__return$v1(void);
extern int __dtrace_isenabled$ruby$send__return$v1(void);
extern void __dtrace_probe$ruby$st__add__direct__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__add__direct__entry$v1(void);
extern void __dtrace_probe$ruby$st__add__direct__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__add__direct__return$v1(void);
extern void __dtrace_probe$ruby$st__cleanup__safe__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long);
extern int __dtrace_isenabled$ruby$st__cleanup__safe__entry$v1(void);
extern void __dtrace_probe$ruby$st__cleanup__safe__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long);
extern int __dtrace_isenabled$ruby$st__cleanup__safe__return$v1(void);
extern void __dtrace_probe$ruby$st__clear__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__clear__entry$v1(void);
extern void __dtrace_probe$ruby$st__clear__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__clear__return$v1(void);
extern void __dtrace_probe$ruby$st__copy__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__copy__entry$v1(void);
extern void __dtrace_probe$ruby$st__copy__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__copy__return$v1(void);
extern void __dtrace_probe$ruby$st__delete__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__delete__entry$v1(void);
extern void __dtrace_probe$ruby$st__delete__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__delete__return$v1(void);
extern void __dtrace_probe$ruby$st__delete__safe__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__delete__safe__entry$v1(void);
extern void __dtrace_probe$ruby$st__delete__safe__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__delete__safe__return$v1(void);
extern void __dtrace_probe$ruby$st__free__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__free__entry$v1(void);
extern void __dtrace_probe$ruby$st__free__return$v1$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long);
extern int __dtrace_isenabled$ruby$st__free__return$v1(void);
extern void __dtrace_probe$ruby$st__get__key__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long);
extern int __dtrace_isenabled$ruby$st__get__key__entry$v1(void);
extern void __dtrace_probe$ruby$st__get__key__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long);
extern int __dtrace_isenabled$ruby$st__get__key__return$v1(void);
extern void __dtrace_probe$ruby$st__init__numtable__entry$v1(void);
extern int __dtrace_isenabled$ruby$st__init__numtable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__numtable__return$v1(void);
extern int __dtrace_isenabled$ruby$st__init__numtable__return$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__numtable__entry$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__numtable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__numtable__return$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__numtable__return$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__strcasetable__entry$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__strcasetable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__strcasetable__return$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__strcasetable__return$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__strtable__entry$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__strtable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__sized__strtable__return$v1$696e74(int);
extern int __dtrace_isenabled$ruby$st__init__sized__strtable__return$v1(void);
extern void __dtrace_probe$ruby$st__init__strcasetable__entry$v1(void);
extern int __dtrace_isenabled$ruby$st__init__strcasetable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__strcasetable__return$v1(void);
extern int __dtrace_isenabled$ruby$st__init__strcasetable__return$v1(void);
extern void __dtrace_probe$ruby$st__init__strtable__entry$v1(void);
extern int __dtrace_isenabled$ruby$st__init__strtable__entry$v1(void);
extern void __dtrace_probe$ruby$st__init__strtable__return$v1(void);
extern int __dtrace_isenabled$ruby$st__init__strtable__return$v1(void);
extern void __dtrace_probe$ruby$st__insert__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__insert__entry$v1(void);
extern void __dtrace_probe$ruby$st__insert__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__insert__return$v1(void);
extern void __dtrace_probe$ruby$st__insert2__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__insert2__entry$v1(void);
extern void __dtrace_probe$ruby$st__insert2__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__insert2__return$v1(void);
extern void __dtrace_probe$ruby$st__lookup__entry$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__lookup__entry$v1(void);
extern void __dtrace_probe$ruby$st__lookup__return$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long, long);
extern int __dtrace_isenabled$ruby$st__lookup__return$v1(void);
extern void __dtrace_probe$ruby$str__buf__cstr__new__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__buf__cstr__new__entry$v1(void);
extern void __dtrace_probe$ruby$str__buf__cstr__new__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__buf__cstr__new__return$v1(void);
extern void __dtrace_probe$ruby$str__buf__new__entry$v1$696e74(int);
extern int __dtrace_isenabled$ruby$str__buf__new__entry$v1(void);
extern void __dtrace_probe$ruby$str__buf__new__return$v1$696e74(int);
extern int __dtrace_isenabled$ruby$str__buf__new__return$v1(void);
extern void __dtrace_probe$ruby$str__dec__length__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__dec__length__entry$v1(void);
extern void __dtrace_probe$ruby$str__dec__length__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__dec__length__return$v1(void);
extern void __dtrace_probe$ruby$str__dup__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__dup__entry$v1(void);
extern void __dtrace_probe$ruby$str__dup__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__dup__return$v1(void);
extern void __dtrace_probe$ruby$str__free__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__free__entry$v1(void);
extern void __dtrace_probe$ruby$str__free__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__free__return$v1(void);
extern void __dtrace_probe$ruby$str__new__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__new__entry$v1(void);
extern void __dtrace_probe$ruby$str__new__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__new__return$v1(void);
extern void __dtrace_probe$ruby$str__new__shared__entry$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__new__shared__entry$v1(void);
extern void __dtrace_probe$ruby$str__new__shared__return$v1$63686172202a(char *);
extern int __dtrace_isenabled$ruby$str__new__shared__return$v1(void);
extern void __dtrace_probe$ruby$str__replace__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$str__replace__entry$v1(void);
extern void __dtrace_probe$ruby$str__replace__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$str__replace__return$v1(void);
extern void __dtrace_probe$ruby$str__resize__capacity__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__resize__capacity__entry$v1(void);
extern void __dtrace_probe$ruby$str__resize__capacity__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__resize__capacity__return$v1(void);
extern void __dtrace_probe$ruby$str__set__length__entry$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__set__length__entry$v1(void);
extern void __dtrace_probe$ruby$str__set__length__return$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$ruby$str__set__length__return$v1(void);
extern void __dtrace_probe$ruby$str__shared__replace__entry$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$str__shared__replace__entry$v1(void);
extern void __dtrace_probe$ruby$str__shared__replace__return$v1$63686172202a$63686172202a(char *, char *);
extern int __dtrace_isenabled$ruby$str__shared__replace__return$v1(void);
extern void __dtrace_probe$ruby$super__entry$v1(void);
extern int __dtrace_isenabled$ruby$super__entry$v1(void);
extern void __dtrace_probe$ruby$super__return$v1(void);
extern int __dtrace_isenabled$ruby$super__return$v1(void);
extern void __dtrace_probe$ruby$throw__entry$v1(void);
extern int __dtrace_isenabled$ruby$throw__entry$v1(void);
extern void __dtrace_probe$ruby$throw__return$v1(void);
extern int __dtrace_isenabled$ruby$throw__return$v1(void);
extern void __dtrace_probe$ruby$vm__change__state__entry$v1$696e74(int);
extern int __dtrace_isenabled$ruby$vm__change__state__entry$v1(void);
extern void __dtrace_probe$ruby$vm__change__state__return$v1$696e74(int);
extern int __dtrace_isenabled$ruby$vm__change__state__return$v1(void);
extern void __dtrace_probe$ruby$yield__entry$v1(void);
extern int __dtrace_isenabled$ruby$yield__entry$v1(void);
extern void __dtrace_probe$ruby$yield__return$v1(void);
extern int __dtrace_isenabled$ruby$yield__return$v1(void);

#ifdef	__cplusplus
}
#endif

#endif	/* _DTRACE_H */
